#!/usr/bin/env ruby

class Aligner

  def align(text)
    # Break it up into lines
    lines = text.split("\n")

    # Work out what type of thing we're formatting.
    type = guess_type(lines)

    # Work out how far we're indented.
    indent = lines.map {|line| line =~ /^(\s*)/; $1.length }.min

    # Split the lines into a prefix and suffix.
    lines.map! {|line| line.strip.split(" ", 2).map {|part| part.strip } }

    # Fix up special cases for particular types.
    fix_sql(lines)      if type == :sql
    fix_cucumber(lines) if type == :cucumber

    # Work out the length of the longest prefix.
    prefix_length = lines.map {|prefix, _| prefix.length }.max

    # Format the result.
    lines.map! {|prefix, suffix| sprintf("%s%*s %s\n", " " * indent, prefix_length, prefix, suffix) }
    lines.join
  end

private

  def guess_type(lines)
    if lines.first =~ /SELECT|INSERT|UPDATE/
      :sql
    else
      :cucumber
    end
  end

  def fix_sql(lines)
    lines.map! do |prefix, suffix|
      matcher = case prefix
        when "INNER", "LEFT", "RIGHT"
          /^(.*JOIN)\s+(.*)$/
        when "ORDER", "GROUP"
          /^(BY)\s+(.*)$/
        else
          nil
      end
      if matcher && suffix =~ matcher
        [prefix + " " + $1, $2]
      else
        [prefix, suffix]
      end
    end
  end

  def fix_cucumber(lines)
    last_prefix = nil
    lines.map! do |prefix, suffix|
      if prefix == last_prefix
        ["And", suffix]
      else
        last_prefix = prefix unless prefix == "And"
        [prefix, suffix]
      end
    end
  end

end

puts Aligner.new.align(ARGF.read)
